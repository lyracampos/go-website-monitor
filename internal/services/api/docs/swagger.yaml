basePath: /
consumes:
- application/json
definitions:
  MessageError:
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: website-monitor/internal/services/api/docs
  WebSite:
    properties:
      Id:
        format: int64
        type: integer
      LastChecked:
        format: date-time
        type: string
      LastUpdated:
        format: date-time
        type: string
      Name:
        type: string
      Status:
        $ref: '#/definitions/WebsiteStatus'
      Url:
        type: string
    type: object
    x-go-package: website-monitor/internal/domain/entities
  WebsiteAddCommand:
    properties:
      Name:
        description: website name
        maxLength: 255
        type: string
      Url:
        description: website valid url
        maxLength: 555
        type: string
    required:
    - Name
    - Url
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteAddResponse:
    properties:
      Id:
        format: int64
        type: integer
      Name:
        type: string
      Status:
        $ref: '#/definitions/WebsiteStatus'
      Url:
        type: string
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteDisableResponse:
    properties:
      Success:
        type: boolean
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteEditCommand:
    properties:
      Id:
        format: int64
        type: integer
      name:
        type: string
        x-go-name: Name
      url:
        type: string
        x-go-name: Url
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteEditResponse:
    properties:
      Id:
        format: int64
        type: integer
      Name:
        type: string
      Status:
        $ref: '#/definitions/WebsiteStatus'
      Url:
        type: string
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteEnableResponse:
    properties:
      Success:
        type: boolean
    type: object
    x-go-package: website-monitor/internal/domain/application/use_cases
  WebsiteStatus:
    format: int64
    type: integer
    x-go-package: website-monitor/internal/domain/types
info:
  description: the purpose of this api is to provide a monitoring service for websites
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: Website Monitor API
  version: 0.0.1
paths:
  /websites:
    get:
      description: Return a list of website from the application
      operationId: ListWebsites
      responses:
        "200":
          $ref: '#/responses/websiteListResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
    post:
      description: Add new website in application
      operationId: AddWebsite
      parameters:
      - description: Payload to add new website in application
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/WebsiteAddCommand'
      responses:
        "201":
          $ref: '#/responses/websiteAddResponse'
        "400":
          $ref: '#/responses/badRequestResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
  /websites/{id}:
    delete:
      description: Remove website from the application
      operationId: WebsiteDelete
      parameters:
      - description: the id of website for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "204":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/badRequestResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
    put:
      description: Edit one website in application
      operationId: WebsiteEdit
      responses:
        "200":
          $ref: '#/responses/websiteEditResponse'
        "404":
          $ref: '#/responses/notFoundResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
  /websites/{id}/disable:
    put:
      description: Disable monitoring to one website from the application
      operationId: WebsiteDisable
      parameters:
      - description: the id of website for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/websiteDisableResponse'
        "404":
          $ref: '#/responses/notFoundResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
  /websites/{id}/enable:
    put:
      description: Enable monitoring to one website from the application
      operationId: WebsiteEnable
      parameters:
      - description: the id of website for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/websiteEnableResponse'
        "404":
          $ref: '#/responses/notFoundResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
  /websites/1:
    get:
      description: Return a website from the application
      operationId: GetWebiste
      responses:
        "200":
          $ref: '#/responses/websiteGetResponse'
        "404":
          $ref: '#/responses/notFoundResponse'
        "501":
          $ref: '#/responses/internalServerErrorResponse'
      tags:
      - websites
produces:
- application/json
responses:
  badRequestResponse:
    description: BadRequest message error returned as string
    schema:
      $ref: '#/definitions/MessageError'
  internalServerErrorResponse:
    description: Internal server error message returned as a string
    schema:
      $ref: '#/definitions/MessageError'
  noContentResponse:
    description: NoContent message error returned as string
  notFoundResponse:
    description: Not found message error returned as string
    schema:
      $ref: '#/definitions/MessageError'
  websiteAddResponse:
    description: Data structure representing website added
    schema:
      $ref: '#/definitions/WebsiteAddResponse'
  websiteDisableResponse:
    description: Data structure representing website disabled
    schema:
      $ref: '#/definitions/WebsiteDisableResponse'
  websiteEditResponse:
    description: Data structure representing website edited
    schema:
      $ref: '#/definitions/WebsiteEditResponse'
  websiteEnableResponse:
    description: Data structure representing website enabled_
    schema:
      $ref: '#/definitions/WebsiteEnableResponse'
  websiteGetResponse:
    description: Data structure representing a  websites
    schema:
      $ref: '#/definitions/WebSite'
  websiteListResponse:
    description: Data structure representing a list of website
    schema:
      items:
        $ref: '#/definitions/WebSite'
      type: array
schemes:
- http
swagger: "2.0"
